#include<iostream>
using namespace std;

const int size_disk = 200;

void bubblesort(int arr[] , int N){
    for(int i=0; i<N; i++){
        for(int j=0; j<N-1-i; j++){
            if(arr[j] > arr[j+1]){
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

//SCAN ALGORITHM FUNCTION (head first moves to right direction)

void scan_algorithm(int arr[],int N,int initial){
    //Manually sorting the request array 
    bubblesort(arr,N);
    
    //variables to store total head movement and the last position
    int total_movement = 0, last = initial;
    
    cout<<"Order of the requests processed: ";
    
    //process requests greater than or equal to the intial head position
    for(int i=0; i<N; i++){
        if(arr[i] >= initial){
            total_movement += abs(arr[i] - last);
            cout<<arr[i]<<" ";
            last = arr[i];
        }
    }
    
    //Move to the end of the disk if necessary
    if(last != size_disk - 1){
        total_movement += (size_disk - 1 - last); //Move to last position
        cout<<size_disk - 1<<" ";
        last = size_disk - 1;
    }
    
    // Now move to the left (decreasing)
    for (int i = N - 1; i >= 0; i--) {
        if (arr[i] < initial) {
            total_movement += abs(arr[i] - last);
            cout << arr[i] << " ";
            last = arr[i];
        }
    }
    
    //output the total head movement
    cout<<"\nTotal head movement = "<<total_movement<<endl;
}

//Main FUNCTION
int main(){
    //total number of requests
    int N;
    
    //Input number of requests
    cout<<"Enter the number of disk requests: ";
    cin>>N;
    
    //request array
    int arr[N];
    
    //Input disk requests
    cout<<"Enter the disk requests: ";
    for(int i=0; i<N; i++){
        cin>>arr[i];
    }
    
    //Inital position of the head pointer
    int initial;
    cout<<"Enter the inital head position: ";
    cin>>initial;
    
    //calling the SCAN Algorithm FUNCTION
    scan_algorithm(arr,N,initial);
    
    return 0;
}
